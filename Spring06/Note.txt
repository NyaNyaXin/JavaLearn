1.Spring如何在Web应用中使用

1)jar包：需要额外加入

spring-web-4.0.0.RELEASE.jar
spring-webmvc-4.0.0.RELEASE.jar

2)Spring的配置文件，没什么不同

3)如何创建IOC容器
①.非Web应用在main方法中直接创建
②.WEB应用应该在Web应用被服务器加载时就创建IOC容器

在ServletContextListener#contextInitialized(ServletContextEvent sce)方法中创建IOC容器

③.在web应用的其他组件中如何访问IOC容器

在ServletContextListener#contextInitialized(ServletContextEvent sce)方法中创建IOC容器后，可以把其放在ServletContext
(即 application域)的一个属性中

④.实际上，Spring配置文件的名字和位置应该也是可配置的
将其配置到当前web应用的初始化参数中较为合适

4)在WEB环境下使用Spring

①.jar包：需要额外加入

spring-web-4.0.0.RELEASE.jar
spring-webmvc-4.0.0.RELEASE.jar

②.Spring的配置文件和非WEB应用没有什么不同
③.需要在web.xml文件中加入如下配置

	<!-- 配置Spring配置文件的名称和位置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<!-- 启动IOC容器的ServletContextListener -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
2.Spring如何整合Struts2

1)整合目标使IOC容器来管理Struts2的Action

2)如何进行整合

Ⅰ.正常加入Struts2
Ⅱ.在Spring的IOC容器中配置Struts2的Action
注意：在IOC容器中配置Struts2的Action时，需要配置scope属性，其值必须为prototype 

<bean class="com.cx.spring.struts2.actions.PersonAction" id="personAction" scope="prototype">
	<property name="personService" ref="personService"></property>
</bean>

Ⅲ.配置Struts2的配置文件:
action节点的class属性需要指向IOC容器中该bean的id

<action name="person-save" class="personAction">
 	<result>/success.jsp</result>
</action>

Ⅳ.加入一个jar包：struts2-spring-plugin-2.3.15.3.jar

3)整合原理：通过添加struts2-spring-plugin-2.3.15.3.jar以后，Struts2会先从IOC容器中获取Action的实例
 if (appContext.containsBean(beanName)) {
            o = appContext.getBean(beanName);
        } else {
            Class beanClazz = getClassInstance(beanName);
            o = buildBean(beanClazz, extraContext);
        }